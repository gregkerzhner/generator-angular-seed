0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.13
3 info using node@v0.10.28
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/greg/.npm/3a52ce78-.lock
11 verbose tar pack [ '/Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz',
11 verbose tar pack   '.' ]
12 verbose tarball /Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz
13 verbose folder .
14 info prepublish generator-angular-seed@0.3.0
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /Users/greg/.npm/1f1177db-tar.lock
17 silly lockFile 93fb51ea-r-angular-seed-0-3-0-package-tgz tar:///Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz
18 verbose lock tar:///Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz /Users/greg/.npm/93fb51ea-r-angular-seed-0-3-0-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 93fb51ea-r-angular-seed-0-3-0-package-tgz tar:///Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz
22 silly lockFile 93fb51ea-r-angular-seed-0-3-0-package-tgz tar:///Users/greg/.npm/generator-angular-seed/0.3.0/package.tgz
23 silly lockFile 75e5ff7a-rator-angular-seed-0-3-0-package /Users/greg/.npm/generator-angular-seed/0.3.0/package
24 verbose lock /Users/greg/.npm/generator-angular-seed/0.3.0/package /Users/greg/.npm/75e5ff7a-rator-angular-seed-0-3-0-package.lock
25 silly lockFile 75e5ff7a-rator-angular-seed-0-3-0-package /Users/greg/.npm/generator-angular-seed/0.3.0/package
26 silly lockFile 75e5ff7a-rator-angular-seed-0-3-0-package /Users/greg/.npm/generator-angular-seed/0.3.0/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'generator-angular-seed',
29 silly publish   version: '0.3.0',
29 silly publish   description: 'A Yeoman generator to get your Angular.js project started on the right track.',
29 silly publish   keywords: [ 'yeoman-generator' ],
29 silly publish   dependencies: { 'yeoman-generator': '^0.16.0' },
29 silly publish   readme: '#generator-angular-seed\n\nA Yeoman generator to get your Angular.js project started on the right track.\n\nFeatures:\n* Organizes an Angular app using a modular approach to organization\n* Configures Gulp and a Gulpfile for development and build tasks\n* Configures Karma + Jasmine for unit testing\n\n### Installation\n```sh\n$ npm install -g generator-angular-seed\n$ yo angular-seed\n```\nThis will ask you a few questions about versions of dependencies.  If you don\'t want a certain dependency, just press enter to skip it.  Then,\n```sh\n$ npm install\n$ bower install\n```\n### Structuring your code\nThe root of the Angular app is in app/scripts.  This directory also comes with one dummy module.  As you build out more modules (i.e. login, admin, etc..) make a corresponding directroy for this module in the app/scripts folder.  Put all files important to this module (LoginController.js, loginService.js, etc.) in this folder.  \n\n### Developing\nRun the Gulp process\n```sh\n$ gulp\n```\n\n* When adding a new file, be sure to restart the gulp process\n* Templates are included in the app using the html2js utility.  Template files *must* use an .tpl.html extension to be included\n* If you include a new dependency via bower, be sure to manually add any JS/CSS files you want to include in the corresponding \'vendorJs\' and \'vendorStyles\' arrays in \'Gulpfile.js\'\n\n### Unit Testing\nIt is best to place your unit tests in the same folder as the actual code you are thinking about testing.  Unit test files *must* use an .test.js extension to be included.  Gulp will watch for any changes in any .test.js files and rerun the test suite automatically.\n\nTo manually run the unit tests\n```sh\n$ gulp unit-test\n```\n\n### E2E testing\nTest files should be placed into the /e2e directory.  Test files must be suffixed with .test.js to be picked up.  Gulp will automatically rerun the tests on change to any of these files, but if you wish to run the e2e suite manually, the task is.\n\n```sh\n$ gulp e2e-test\n```\n\nNote: Your server and dev environment must be running for e2e tests to work.\n\n\n### Creating builds\nA few utilities are included to create built bundles of your application.  All builds are placed in the \'build\' directory.\n\nNote: if you have app wide variables that need to vary in different environments (for example, a backend url that may be different in development than in production), put these into respective files located in the config directory. \n\nCreates a production bundle with all javascripts (vendor and yours) combined into 1 file and minified.  Angular app will use any config in the config/config-production.js file. \n```sh\n$ gulp production\n```\n\nSame as above, except the config/config-staging.js file is used.\n```sh\n$ gulp staging\n```\n\nPuts all the scripts from your Angular app (not including vendor scripts) into one file, all vendor scripts into another file, and all templates into a 3rd file, all in the \'build\' directory.  This task is useful if you want to create something for publishing on bower, or otherwise produce human readable distributions of your code.\n```sh\n$ gulp build\n```\n\n\n\n\n\nLicense\n----\n\nMIT\n\n\n\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '602e8607019377a6153510ac22f0d8106e66dd81',
29 silly publish   _id: 'generator-angular-seed@0.3.0',
29 silly publish   scripts: {},
29 silly publish   _shasum: '44488a3ed23c83f12d4f6980902d2b8a636c6d8d',
29 silly publish   _from: '.' }
30 verbose url raw generator-angular-seed
31 verbose url resolving [ 'https://registry.npmjs.org/', './generator-angular-seed' ]
32 verbose url resolved https://registry.npmjs.org/generator-angular-seed
33 info trying registry request attempt 1 at 15:28:26
34 http PUT https://registry.npmjs.org/generator-angular-seed
35 http 403 https://registry.npmjs.org/generator-angular-seed
36 verbose headers { date: 'Thu, 27 Nov 2014 14:28:29 GMT',
36 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
36 verbose headers   'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=60',
36 verbose headers   'content-length': '5321',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   'x-served-by': 'cache-ams4136-AMS',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1417098508.421968,VS0,VE776',
36 verbose headers   'keep-alive': 'timeout=10, max=50',
36 verbose headers   connection: 'Keep-Alive' }
37 error publish Failed PUT 403
38 error Error: forbidden cannot modify pre-existing version: 0.3.0
38 error old={"name":"generator-angular-seed","version":"0.3.0","description":"A Yeoman generator to get your Angular.js project started on the right track.","keywords":["yeoman-generator"],"dependencies":{"yeoman-generator":"^0.16.0"},"gitHead":"95affdadc58835a98cdd0a9f3de232d356c86cf9","_id":"generator-angular-seed@0.3.0","scripts":{},"_shasum":"7ed3fdb54490552301b33506dff6ff05da8118b9","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"guidoprincess","email":"guidoprincess@gmail.com"},"maintainers":[{"name":"guidoprincess","email":"guidoprincess@gmail.com"}],"dist":{"shasum":"7ed3fdb54490552301b33506dff6ff05da8118b9","tarball":"http://registry.npmjs.org/generator-angular-seed/-/generator-angular-seed-0.3.0.tgz"}}
38 error new={"name":"generator-angular-seed","version":"0.3.0","description":"A Yeoman generator to get your Angular.js project started on the right track.","keywords":["yeoman-generator"],"dependencies":{"yeoman-generator":"^0.16.0"},"readme":"#generator-angular-seed\u000a\u000aA Yeoman generator to get your Angular.js project started on the right track.\u000a\u000aFeatures:\u000a* Organizes an Angular app using a modular approach to organization\u000a* Configures Gulp and a Gulpfile for development and build tasks\u000a* Configures Karma + Jasmine for unit testing\u000a\u000a### Installation\u000a```sh\u000a$ npm install -g generator-angular-seed\u000a$ yo angular-seed\u000a```\u000aThis will ask you a few questions about versions of dependencies.  If you don't want a certain dependency, just press enter to skip it.  Then,\u000a```sh\u000a$ npm install\u000a$ bower install\u000a```\u000a### Structuring your code\u000aThe root of the Angular app is in app/scripts.  This directory also comes with one dummy module.  As you build out more modules (i.e. login, admin, etc..) make a corresponding directroy for this module in the app/scripts folder.  Put all files important to this module (LoginController.js, loginService.js, etc.) in this folder.  \u000a\u000a### Developing\u000aRun the Gulp process\u000a```sh\u000a$ gulp\u000a```\u000a\u000a* When adding a new file, be sure to restart the gulp process\u000a* Templates are included in the app using the html2js utility.  Template files *must* use an .tpl.html extension to be included\u000a* If you include a new dependency via bower, be sure to manually add any JS/CSS files you want to include in the corresponding 'vendorJs' and 'vendorStyles' arrays in 'Gulpfile.js'\u000a\u000a### Unit Testing\u000aIt is best to place your unit tests in the same folder as the actual code you are thinking about testing.  Unit test files *must* use an .test.js extension to be included.  Gulp will watch for any changes in any .test.js files and rerun the test suite automatically.\u000a\u000aTo manually run the unit tests\u000a```sh\u000a$ gulp unit-test\u000a```\u000a\u000a### E2E testing\u000aTest files should be placed into the /e2e directory.  Test files must be suffixed with .test.js to be picked up.  Gulp will automatically rerun the tests on change to any of these files, but if you wish to run the e2e suite manually, the task is.\u000a\u000a```sh\u000a$ gulp e2e-test\u000a```\u000a\u000aNote: Your server and dev environment must be running for e2e tests to work.\u000a\u000a\u000a### Creating builds\u000aA few utilities are included to create built bundles of your application.  All builds are placed in the 'build' directory.\u000a\u000aNote: if you have app wide variables that need to vary in different environments (for example, a backend url that may be different in development than in production), put these into respective files located in the config directory. \u000a\u000aCreates a production bundle with all javascripts (vendor and yours) combined into 1 file and minified.  Angular app will use any config in the config/config-production.js file. \u000a```sh\u000a$ gulp production\u000a```\u000a\u000aSame as above, except the config/config-staging.js file is used.\u000a```sh\u000a$ gulp staging\u000a```\u000a\u000aPuts all the scripts from your Angular app (not including vendor scripts) into one file, all vendor scripts into another file, and all templates into a 3rd file, all in the 'build' directory.  This task is useful if you want to create something for publishing on bower, or otherwise produce human readable distributions of your code.\u000a```sh\u000a$ gulp build\u000a```\u000a\u000a\u000a\u000a\u000a\u000aLicense\u000a----\u000a\u000aMIT\u000a\u000a\u000a\u000a","readmeFilename":"README.md","gitHead":"602e8607019377a6153510ac22f0d8106e66dd81","_id":"generator-angular-seed@0.3.0","scripts":{},"_shasum":"44488a3ed23c83f12d4f6980902d2b8a636c6d8d","_from":".","_npmVersion":"1.4.13","_npmUser":{"name":"guidoprincess","email":"guidoprincess@gmail.com"},"maintainers":[{"name":"guidoprincess","email":"guidoprincess@gmail.com"}],"dist":{"shasum":"44488a3ed23c83f12d4f6980902d2b8a636c6d8d","tarball":"http://registry.npmjs.org/generator-angular-seed/-/generator-angular-seed-0.3.0.tgz"}}: generator-angular-seed
38 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:274:14)
38 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:212:65)
38 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
38 error     at Request.EventEmitter.emit (events.js:98:17)
38 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
38 error     at Request.EventEmitter.emit (events.js:117:20)
38 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
38 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
38 error     at _stream_readable.js:919:16
38 error     at process._tickCallback (node.js:419:13)
39 error If you need help, you may report this *entire* log,
39 error including the npm and node versions, at:
39 error     <http://github.com/npm/npm/issues>
40 error System Darwin 13.3.0
41 error command "node" "/usr/local/bin/npm" "publish"
42 error cwd /Users/greg/codes/tara/generator-angular-seed
43 error node -v v0.10.28
44 error npm -v 1.4.13
45 verbose exit [ 1, true ]
